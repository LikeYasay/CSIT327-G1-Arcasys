# Generated by Django 5.2.7 on 2025-10-03 15:07

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('RoleID', models.UUIDField(db_column='RoleID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('RoleName', models.CharField(db_column='RoleName', max_length=50, unique=True)),
                ('RoleDescription', models.TextField(blank=True, db_column='RoleDescription')),
            ],
            options={
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('UserID', models.UUIDField(db_column='UserID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('UserFullName', models.CharField(db_column='UserFullName', max_length=255)),
                ('UserEmail', models.EmailField(db_column='UserEmail', max_length=254, unique=True)),
                ('UserPasswordHash', models.CharField(blank=True, db_column='UserPasswordHash', max_length=128)),
                ('UserCreateAt', models.DateTimeField(db_column='UserCreateAt', default=django.utils.timezone.now)),
                ('UserLastLogin', models.DateTimeField(blank=True, db_column='UserLastLogin', null=True)),
                ('isActive', models.BooleanField(db_column='isActive', default=True)),
                ('isAdmin', models.BooleanField(db_column='isAdmin', default=False)),
                ('isStaff', models.BooleanField(db_column='isStaff', default=False)),
                ('RoleID', models.ForeignKey(db_column='RoleID', on_delete=django.db.models.deletion.PROTECT, to='ArcasysApp.role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
        ),
    ]
