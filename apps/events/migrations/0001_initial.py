# Generated by Django 5.2.6 on 2025-10-16 06:39

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('DepartmentID', models.UUIDField(db_column='DepartmentID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('DepartmentName', models.CharField(db_column='DepartmentName', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('EventID', models.UUIDField(db_column='EventID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('EventTitle', models.CharField(db_column='EventTitle', max_length=255)),
                ('EventDescription', models.TextField(db_column='EventDescription')),
                ('EventDate', models.DateField(db_column='EventDate')),
                ('EventTime', models.TimeField(db_column='EventTime')),
                ('EventLocation', models.CharField(db_column='EventLocation', max_length=255)),
                ('EventCreatedAt', models.DateTimeField(db_column='EventCreatedAt', default=django.utils.timezone.now)),
                ('EventUpdatedAt', models.DateTimeField(db_column='EventUpdatedAt', default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('TagID', models.UUIDField(db_column='TagID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('TagName', models.CharField(db_column='TagName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='EventLink',
            fields=[
                ('EventLinkID', models.UUIDField(db_column='EventLinkID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('EventLinkName', models.CharField(db_column='EventLinkName', max_length=255)),
                ('EventLinkURL', models.URLField(db_column='EventLinkURL', max_length=2000)),
                ('EventID', models.ForeignKey(db_column='EventID', on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'db_table': 'EventLink',
            },
        ),
        migrations.CreateModel(
            name='EventDepartment',
            fields=[
                ('EventDepartmentID', models.UUIDField(db_column='EventDepartmentID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('EventDepartmentAssignedAt', models.DateTimeField(db_column='EventDepartmentAssignedAt', default=django.utils.timezone.now)),
                ('DepartmentID', models.ForeignKey(db_column='DepartmentID', on_delete=django.db.models.deletion.CASCADE, to='events.department')),
                ('EventID', models.ForeignKey(db_column='EventID', on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'db_table': 'EventDepartment',
                'unique_together': {('EventID', 'DepartmentID')},
            },
        ),
        migrations.CreateModel(
            name='EventTag',
            fields=[
                ('EventTagID', models.UUIDField(db_column='EventTagID', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('EventTagAssignedAt', models.DateTimeField(db_column='EventTagAssignedAt', default=django.utils.timezone.now)),
                ('EventID', models.ForeignKey(db_column='EventID', on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('TagID', models.ForeignKey(db_column='TagID', on_delete=django.db.models.deletion.CASCADE, to='events.tag')),
            ],
            options={
                'db_table': 'EventTag',
                'unique_together': {('EventID', 'TagID')},
            },
        ),
    ]
